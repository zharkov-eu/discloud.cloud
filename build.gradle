buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group = 'ru.discloud'
    sourceCompatibility = 1.8

    dependencies {
        compile 'org.jetbrains:annotations:16.0.2'
    }

    //noinspection GroovyAssignabilityCheck
    task makeConfig << {
        Properties props = new Properties()
        if (!file("src/main/resources/application.properties").exists()) return
        props.load(file("src/main/resources/application.properties").newReader())
        if (project.hasProperty('dsUrl')) props.setProperty("spring.datasource.url", (String) dsUrl)
        if (project.hasProperty('dsUsername')) props.setProperty("spring.datasource.username", (String) dsUsername)
        if (project.hasProperty('dsPassword')) props.setProperty("spring.datasource.password", (String) dsPassword)
        if (project.hasProperty('dsSchema')) props.setProperty("spring.jpa.properties.hibernate.default_schema", (String) dsSchema)
        if (project.hasProperty('rsDatabase')) props.setProperty("spring.redis.database", (String) rsDatabase)
        if (project.hasProperty('rsHost')) props.setProperty("spring.redis.host", (String) rsHost)
        if (project.hasProperty('rsPort')) props.setProperty("spring.redis.port", (String) rsPort)
        if (project.hasProperty('rsPassword')) props.setProperty("spring.redis.password", (String) rsPassword)
        props.store(file("src/main/resources/application.properties").newWriter(), "Generated by deploy task, project version " + project.version)
    }
}

project(':auth') {
    dependencies {
        compile project(':shared')
    }
}

project(':statistics') {
    dependencies {
        compile project(':shared')
    }
}

project(':user') {
    dependencies {
        compile project(':shared')
    }
}

project(':gateway') {
    dependencies {
        compile project(':shared')
        compile project(':auth')
        compile project(':statistics')
        compile project(':user')
    }
}
